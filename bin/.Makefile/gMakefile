uniq= $(if $(1),$(firstword $(1)) $(call uniq,$(filter-out $(firstword $(1)),$(1))))
CFLAGS= -Wall -Wextra -Werror $(DEBUG)
define clean_libname
$(1):=$$(filter-out %.a, $$($(1))) $$(foreach elt, $$(filter %.a, $$($(1))), $$(elt:%.a=%))

endef

$(eval $(call clean_libname,LIBTARGETS))
TARGETS=$(EXETARGETS) $(LIBTARGETS)
$(foreach target, $(TARGETS), $(eval $(call clean_libname,$(target)_USELIBS)))
USELIBS=$(foreach target,$(TARGETS),$($(target)_USELIBS))
USELIBS:=$(call uniq, $(USELIBS))

define target_include
$(foreach dir, $($(1)_DIR), $(dir:%=-I%))
endef

define target_ld
$(foreach lib, $($(1)_USELIBS), $($(lib)_DIR:%=-L%) $(lib:lib%=-l%)) $($(1)_STDLIB:lib%=-l%)
endef

$(info :::::::)
$(info $(call target_ld,toto))

define target_prerequisite
$$($(1)_SRCS:%.c=%.o) $$($(1)_USELIBS:%=%.a)
endef

define usedlib_rule
$(1).a:
	$$(MAKE) -C $$($(1:%.a=%)_DIR) $(1).a
endef

define libtarget_rule
$(1): $(call target_prerequisite,$(1))
	ar -rc $$@ $$(filter-out %.a, $$?)
	ranlib $$@
endef

define exetarget_rule
$(1): $(call target_prerequisite,$(1))
	$$(CC) $$(CFLAGS) $(call target_include,$(1)) $$(filter-out %.a, $$^) -o $$@ $(call target_ld,$(1))
endef

.PHONY: all
all: debug

.PHONY: debug
debug:
	echo $(TARGETS)
	echo $(USELIBS)


$(foreach target,$(EXETARGETS), $(info $(call exetarget_rule,$(target))))

$(foreach target,$(LIBTARGETS), $(info $(call libtarget_rule,$(target))))

$(foreach lib, $(USELIBS), $(info $(call usedlib_rule,$(lib))))
